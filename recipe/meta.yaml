{% set name = "pytorch-lightning" %}
{% set version = "2.5.1.post0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name.replace('-', '_') }}-{{ version }}.tar.gz
  sha256: abc3d5a804d41f941b14e3fd7db5572a1270cd1e9889b50e962984c87d498d94

build:
  number: 0
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - pip
    - python {{ python_min }}
    - setuptools
  run:
    - fsspec >=2022.5.0
    - typing-extensions >=4.4.0
    - python >={{ python_min }}
    - packaging >=20.0
    - numpy >=1.17.2
    - pyyaml >=5.4
    - pytorch >=2.1.0
    - tqdm >=4.57.0
    - fsspec[http] >2021.06.0
    - torchmetrics >=0.7.0
    - typing_extensions >=4.4.0
    - lightning-utilities >=0.10.0
    - requests

test:
  imports:
    - pytorch_lightning
  commands:
    - pip check
  requires:
    - python {{ python_min }}  # TODO: this upper bound is because of PyTorch issue with dataclass
    - pip

about:
  home: https://pypi.org/project/pytorch-lightning/
  summary: PyTorch Lightning is the lightweight PyTorch wrapper for ML researchers. Scale your models. Write less boilerplate.
  license: Apache-2.0
  license_file: LICENSE
  description: |
    Lightning is a way to organize your PyTorch code to decouple the science code from the engineering.
     It's more of a style-guide than a framework.

    In Lightning, you organize your code into 3 distinct categories:

    1. Research code (goes in the LightningModule).
    2. Engineering code (you delete, and is handled by the Trainer).
    3. Non-essential research code (logging, etc. this goes in Callbacks).

    Although your research/production project might start simple, once you add things like GPU AND TPU training,
     16-bit precision, etc, you end up spending more time engineering than researching.
     Lightning automates AND rigorously tests those parts for you.

    Overall, Lightning guarantees rigorously tested, correct, modern best practices for the automated parts.

    Documentation
    -------------
    - https://pytorch-lightning.readthedocs.io/en/latest
    - https://pytorch-lightning.readthedocs.io/en/stable

extra:
  recipe-maintainers:
    - williamFalcon
    - borda
    - carmocca
    - jan-janssen
