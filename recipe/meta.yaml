{% set name = "pytorch-lightning" %}
{% set version = "1.8.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 5b60e5eb84dd16ee8dc408286f0074ab475bed385b09a702d678ccbde91e4818

build:
  number: 0
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - pip
    - python >=3.6
  run:
    - python >=3.7
    - packaging >=17.0, <=21.3
    - numpy >=1.17.2, <1.23.1
    - pyyaml >=5.4, <=6.0
    - pytorch >=1.9.*, <1.13.0
    - tqdm >=4.57.0, <4.65.0
    - tensorboard >=2.9.1, <2.11.0
    - fsspec[http] >2021.06.0, <2022.8.0
    - torchmetrics >=0.7.0, <0.10.1
    - typing-extensions >=4.0.0, <=4.4.0
    - lightning-utilities >=0.3.0, <0.4.0

test:
  imports:
    - pytorch_lightning
  #commands:
  #  - pip check
  requires:
    - pip

about:
  home: https://pypi.org/project/pytorch-lightning/
  summary: PyTorch Lightning is the lightweight PyTorch wrapper for ML researchers. Scale your models. Write less boilerplate.
  license: Apache-2.0
  license_file: LICENSE
  description: |
    Lightning is a way to organize your PyTorch code to decouple the science code from the engineering.
     It's more of a style-guide than a framework.

    In Lightning, you organize your code into 3 distinct categories:

    1. Research code (goes in the LightningModule).
    2. Engineering code (you delete, and is handled by the Trainer).
    3. Non-essential research code (logging, etc. this goes in Callbacks).

    Although your research/production project might start simple, once you add things like GPU AND TPU training,
     16-bit precision, etc, you end up spending more time engineering than researching.
     Lightning automates AND rigorously tests those parts for you.

    Overall, Lightning guarantees rigorously tested, correct, modern best practices for the automated parts.

    Documentation
    -------------
    - https://pytorch-lightning.readthedocs.io/en/latest
    - https://pytorch-lightning.readthedocs.io/en/stable

extra:
  recipe-maintainers:
    - williamFalcon
    - borda
    - carmocca
